HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <ul id="draggable-list">
  <li draggable="true">ðŸŽµ Song 1</li>
  <li draggable="true">ðŸŽµ Song 2</li>
  <li draggable="true">ðŸŽµ Song 3</li>
  <li draggable="true">ðŸŽµ Song 4</li>
  <li draggable="true">ðŸŽµ Song 5</li>
  <li draggable="true">ðŸŽµ Song 6</li>
  <li draggable="true">ðŸŽµ Song 7</li>
  <li draggable="true">ðŸŽµ Song 8</li>
  <li draggable="true">ðŸŽµ Song 9</li>
  <li draggable="true">ðŸŽµ Song 10</li>

</ul>
</body>
</html>

CSS

<style>
    #draggable-list {
  list-style: none;
  padding: 0;
  max-width: 300px;
}

#draggable-list li {
  padding: 12px;
  margin: 6px 0;
  background-color: #f0f0f0;
  border-radius: 8px;
  cursor: move;
  transition: background 0.3s ease, transform 0.2s ease;
}

.dragging {
  opacity: 0.5;
  transform: scale(1.02);
  background-color: #dcdcdc;
}

</style>

JAVASCRIPT

<script>
    const list = document.getElementById("draggable-list");
let dragItem = null;

list.addEventListener("dragstart", (e) => {
  dragItem = e.target;
  e.target.classList.add("dragging");
});

list.addEventListener("dragend", (e) => {
  e.target.classList.remove("dragging");
  dragItem = null;
});

list.addEventListener("dragover", (e) => {
  e.preventDefault();
  const afterElement = getDragAfterElement(list, e.clientY);
  if (afterElement == null) {
    list.appendChild(dragItem);
  } else {
    list.insertBefore(dragItem, afterElement);
  }
});

function getDragAfterElement(container, y) {
  const draggableElements = [...container.querySelectorAll("li:not(.dragging)")];

  return draggableElements.reduce((closest, child) => {
    const box = child.getBoundingClientRect();
    const offset = y - box.top - box.height / 2;

    if (offset < 0 && offset > closest.offset) {
      return { offset: offset, element: child };
    } else {
      return closest;
    }
  }, { offset: Number.NEGATIVE_INFINITY }).element;
}

</script>
